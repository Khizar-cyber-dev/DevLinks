// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id        String         @id @default(cuid())
  clerkId   String         @unique
  name      String
  username  String         @unique
  email     String         @unique
  password  String?
  bio       String?
  avatarUrl String?
  createdAt DateTime       @default(now())
  bookmarks Bookmark[]
  links     ExternalLink[]
  followers Follow[]       @relation("UserFollowers")
  following Follow[]       @relation("UserFollowing")
  likes     Like[]
  projects  Project[] 
}

model Project {
  id          String      @id @default(cuid())
  title       String
  description String
  imageUrl    String?
  viewCount Int @default(0)
  userId      String
  createdAt   DateTime    @default(now())
  githubUrl   String?
  liveUrl     String?
  bookmarks   Bookmark[]
  likes       Like[]
  user        User        @relation(fields: [userId], references: [id])
  techStacks  TechStack[]
}

model TechStack {
  id        String  @id @default(cuid())
  name      String
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}

model Follow {
  id          String   @id @default(cuid())
  followerId  String
  followingId String
  createdAt   DateTime @default(now())
  following   User     @relation("UserFollowers", fields: [followingId], references: [id])
  follower    User     @relation("UserFollowing", fields: [followerId], references: [id])

  @@unique([followerId, followingId])
}

model Bookmark {
  id        String   @id @default(cuid())
  userId    String
  projectId String
  createdAt DateTime @default(now())
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}

model ExternalLink {
  id     String @id @default(cuid())
  title  String
  url    String
  userId String
  user   User   @relation(fields: [userId], references: [id])
}